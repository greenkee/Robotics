// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package edu.wpi.first.wpilibj.templates.subsystems;

import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.templates.RobotMap;
import edu.wpi.first.wpilibj.templates.commands.PneumaticsController;


/**
 *
 */
public class Pneumatics extends Subsystem {
    DoubleSolenoid doubleSolenoid2;
    Compressor compressor;
    DoubleSolenoid doubleSolenoid1;
    boolean solenoidPosition; //true is forward
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    public Pneumatics(){
        doubleSolenoid1 = new DoubleSolenoid (6,7);
        doubleSolenoid2 = new DoubleSolenoid (4,5);
       // compressor = new Compressor(1,2);
    }
    
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new PneumaticsController());
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public void startCompressor(){
        compressor.start();
    }
    public void stopCompressor(){
        compressor.stop();
    }
    public boolean compressorValue(){
        return compressor.getPressureSwitchValue();
    }
    public void stopSolenoid(){
        doubleSolenoid1.set(DoubleSolenoid.Value.kOff);
        doubleSolenoid2.set(DoubleSolenoid.Value.kOff);
    }
    public void solenoidForward(){
        doubleSolenoid1.set(DoubleSolenoid.Value.kForward);
        doubleSolenoid2.set(DoubleSolenoid.Value.kForward);
        solenoidPosition = true;
    }
    public void solenoidReverse(){
        doubleSolenoid1.set(DoubleSolenoid.Value.kReverse);
        doubleSolenoid2.set(DoubleSolenoid.Value.kReverse);
        solenoidPosition = false;
    }
    public boolean solenoidPosition(){
        return solenoidPosition;
    }
}

